//package com.codeforc.algorithm.days;
//
//import java.util.List;
//
///**
// * 给定一个 排序好 的数组arr ，两个整数 k 和 x ，从数组中找到最靠近 x（两数之差最小）的 k 个数。返回的结果必须要是按升序排好的。
// * 整数 a 比整数 b 更接近 x 需要满足：
// * |a - x| < |b - x| 或者
// * |a - x| == |b - x| 且 a < b
// *
// * 示例 1：
// * 输入：arr = [1,2,3,4,5], k = 4, x = 3
// * 输出：[1,2,3,4]
// *
// * 示例 2：
// * 输入：arr = [1,2,3,4,5], k = 4, x = -1
// * 输出：[1,2,3,4]
// * 给你一棵二叉树的根节点 root ，返回树的 最大宽度 。
// * 树的 最大宽度 是所有层中最大的 宽度 。
// * 每一层的 宽度 被定义为该层最左和最右的非空节点（即，两个端点）之间的长度。将这个二叉树视作与满二叉树结构相同，两端点间会出现一些延伸到这一层的 null 节点，这些 null 节点也计入长度。
// * 题目数据保证答案将会在 32 位 带符号整数范围内。
// */
//public class findClosestElements {
//
//    public List<Integer> findClosestElements(int[] arr, int k, int x) {
//
//    }
//}
