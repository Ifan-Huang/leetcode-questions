package com.codeforc.algorithm.playground;

/*
动态规划 类似跳台阶的问题但是有额外的限制条件
举例：给定数字 122 一共有三种翻译的可能 第一种bcc 122 第二种 bw 1 22 第三种 mc 12 2
可以观察出当从左向右遍历时，存在选择选一格字符或者选两个字符的情况 类似跳一格或者跳两格
但是题目给出了限制条件 当想要跳两格的时候 所选的二位数满足 >=10且<=25 ，当0作为十位数前置位时，不可取
如果不满足上诉条件  则不存在跳两格 只能跳一格的形式到达目标

所以当num[i-1,i] 拼接成的十位数 >=10且<=25 时 有 dp[i] = dp[i-1] + dp[i-2] 即跳两格跳一格都可选
    当num[i-1,i] 拼接成的十位数 >25或者<10 时 dp[i] = dp[i-1]   即只能选取跳一格的方案

执行用时：0 ms, 在所有 Java 提交中击败了100.00%的用户
内存消耗：34.9 MB, 在所有 Java 提交中击败了92.65%的用户
*/
public class Dp5 {

}
